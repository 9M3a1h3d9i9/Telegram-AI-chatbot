
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "DIVIDE LPAREN MINUS NUMBER PLUS RPAREN TIMESexpression : expression '+' term\n                  | expression '-' term\n                  | termterm : term '*' factor\n            | term '/' factor\n            | factorfactor : '(' expression ')'\n              | NUMBER"
    
_lr_action_items = {'(':([0,4,6,7,8,9,],[4,4,4,4,4,4,]),'NUMBER':([0,4,6,7,8,9,],[5,5,5,5,5,5,]),'$end':([1,2,3,5,11,12,13,14,15,],[0,-3,-6,-8,-1,-2,-4,-5,-7,]),'+':([1,2,3,5,10,11,12,13,14,15,],[6,-3,-6,-8,6,-1,-2,-4,-5,-7,]),'-':([1,2,3,5,10,11,12,13,14,15,],[7,-3,-6,-8,7,-1,-2,-4,-5,-7,]),')':([2,3,5,10,11,12,13,14,15,],[-3,-6,-8,15,-1,-2,-4,-5,-7,]),'*':([2,3,5,11,12,13,14,15,],[8,-6,-8,8,8,-4,-5,-7,]),'/':([2,3,5,11,12,13,14,15,],[9,-6,-8,9,9,-4,-5,-7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,4,],[1,10,]),'term':([0,4,6,7,],[2,2,11,12,]),'factor':([0,4,6,7,8,9,],[3,3,3,3,13,14,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression + term','expression',3,'p_expression','Analysis_of_exp(CFG).py',5),
  ('expression -> expression - term','expression',3,'p_expression','Analysis_of_exp(CFG).py',6),
  ('expression -> term','expression',1,'p_expression','Analysis_of_exp(CFG).py',7),
  ('term -> term * factor','term',3,'p_term','Analysis_of_exp(CFG).py',17),
  ('term -> term / factor','term',3,'p_term','Analysis_of_exp(CFG).py',18),
  ('term -> factor','term',1,'p_term','Analysis_of_exp(CFG).py',19),
  ('factor -> ( expression )','factor',3,'p_factor','Analysis_of_exp(CFG).py',29),
  ('factor -> NUMBER','factor',1,'p_factor','Analysis_of_exp(CFG).py',30),
]
